{"version":3,"sources":["Goodreads.js","configuration.js","Details.js","Thumbnail.js","Category.js","About.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Goodreads","this","props","reviews","react_default","a","createElement","className","formatRating","AverageRating","dangerouslySetInnerHTML","__html","ReviewsHtml","rating","toLocaleString","minimumFractionDigits","maximumFractionDigits","Component","server","configuration","RECOMMENDATIONS_ENDPOINT","searchReviewsUrl","id","concat","getReviewsUrl","grBookID","THUMBNAILS_BASE_URL","FINNA_BASE_URL","DELAY_MILLIS","Details","item","Locations","Subjects","hidden","setDefaults","subjects","map","subject","FullText","join","locations","location","key","ID","Name","finnaLink","ExternalRelativeUrl","onClick","handleCloseButtonClicked","AuthorName","Title","PublicationYear","Series","href","src_Goodreads","Thumbnail","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clicked","bind","assertThisInitialized","e","handleClick","src","ExternalID","alt","Category","state","detailsHidden","detailsItem","handleThumbnailClick","handleDetailsCloseButtonClicked","setState","getReviewsID","_this2","images","category","Items","src_Thumbnail","src_Details","self","url","console","log","fetch","then","response","ok","json","Error","status","searchResult","NumResults","setTimeout","getReviews","catch","error","message","BestMatch","BookID","Reviews","About","NavBar","handleOpenPage","currentTarget","dataset","target","data-target","App","categories","activePage","setActivePage","pageID","cat","src_Category","src_NavBar","src_About","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sOA0BeA,mLAtBX,OAA2B,OAAvBC,KAAKC,MAAMC,QAEXC,EAAAC,EAAAC,cAAA,YAKFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,0CAAiCF,EAAAC,EAAAC,cAAA,WAChCL,KAAKO,aAAaP,KAAKC,MAAMC,QAAQM,eADtC,MAEAL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbG,wBAAyB,CAACC,OAAQV,KAAKC,MAAMC,QAAQS,qDAMhDC,GACX,OAAOA,EAAOC,eAAe,QAAS,CAACC,sBAAuB,EAAGC,sBAAuB,WApBpEC,aCFlBC,EAAS,mCAEAC,EAAA,CACbC,yBAA0BF,EAAS,uBACnCG,iBAAkB,SAACC,GAAD,SAAAC,OAAWL,EAAX,gCAAAK,OAAgDD,IAClEE,cAAe,SAACC,GAAD,SAAAF,OAAiBL,EAAjB,kCAAAK,OAAwDE,IACvEC,oBAAqBR,EAAS,uBAC9BS,eAAgB,yBAChBC,aAAc,MCoDDC,sLAvDDC,GACa,OAAnBA,EAAKC,YACPD,EAAKC,UAAY,IAEG,OAAlBD,EAAKE,WACPF,EAAKE,SAAW,qCAKlB,IAAMF,EAAO7B,KAAKC,MAAM4B,KACxB,GAAa,OAATA,EACF,OAAO1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU0B,QAAM,IAGxChC,KAAKiC,YAAYJ,GAEjB,IAAMK,EAAWL,EAAKE,SAASI,IAAI,SAACC,GAAD,OACjCA,EAAQC,WACRC,KAAK,OACDC,EAAYV,EAAKC,UAAUK,IAAI,SAACK,GAAD,OACnCrC,EAAAC,EAAAC,cAAA,MAAIoC,IAAKD,EAASE,IAAKF,EAASG,QAE5BC,EAAY1B,EAAcQ,eAAiBG,EAAKgB,oBAEtD,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe0B,OAAQhC,KAAKC,MAAM+B,QAC/C7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAChBwC,QAAS9C,KAAKC,MAAM8C,0BADtB,QAIA5C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcuB,EAAKmB,YAAkB7C,EAAAC,EAAAC,cAAA,WACpDwB,EAAKoB,OAER9C,EAAAC,EAAAC,cAAA,WAAMwB,EAAKqB,iBACX/C,EAAAC,EAAAC,cAAA,WAAMwB,EAAKsB,QACXhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAY4B,GACzB/B,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,UAAKkC,GACLpC,EAAAC,EAAAC,cAAA,mDAAoCF,EAAAC,EAAAC,cAAA,KAAG+C,KAAMR,GAAT,YAApC,MAEFzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACgD,EAAD,CAAWnD,QAASF,KAAKC,MAAMC,qBA/CrBc,aCsBPsC,cAtBb,SAAAA,EAAYrD,GAAO,IAAAsD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxD,KAAAsD,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA5D,KAAMC,KAED4D,QAAUN,EAAKM,QAAQC,KAAbN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAHEA,uEAMXS,GACNhE,KAAKC,MAAMgE,YAAYjE,KAAKC,MAAM4B,uCAIlC,IAAMA,EAAO7B,KAAKC,MAAM4B,KACxB,OACE1B,EAAAC,EAAAC,cAAA,OAAKoC,IAAKZ,EAAKa,GACbwB,IAAKhD,EAAcO,oBAAsBI,EAAKsC,WAAa,OAC3D7D,UAAU,oCACV8D,IAAKvC,EAAKoB,MACVH,QAAS9C,KAAK6D,iBAlBE7C,aCiGTqD,cA9Fb,SAAAA,EAAYpE,GAAO,IAAAsD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxD,KAAAqE,IACjBd,EAAAC,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAa,GAAAT,KAAA5D,KAAMC,KACDqE,MAAQ,CACXC,eAAe,EACfC,YAAa,KACbtE,QAAS,MAGXqD,EAAKkB,qBAAuBlB,EAAKkB,qBAAqBX,KAA1BN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAC5BA,EAAKmB,gCAAkCnB,EAAKmB,gCAAgCZ,KAArCN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KATtBA,oFAYE1B,GACnB7B,KAAK2E,SAAS,CACZJ,eAAe,EACfC,YAAa3C,EACb3B,QAAS,OAGXF,KAAK4E,aAAa/C,2DAGYmC,GAC9BhE,KAAK2E,SAAS,CACZJ,eAAe,EACfC,YAAa,wCAIR,IAAAK,EAAA7E,KACD8E,EAAS9E,KAAKC,MAAM8E,SAASC,MAAM7C,IAAI,SAACN,GAAD,OAC3C1B,EAAAC,EAAAC,cAAC4E,EAAD,CAAWxC,IAAKZ,EAAKa,GAAIb,KAAMA,EAAMoC,YAAaY,EAAKJ,yBAEzD,OACEtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UAAKL,KAAKC,MAAM8E,SAASpC,MACzBxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZwE,GAEH3E,EAAAC,EAAAC,cAAC6E,EAAD,CAASrD,KAAM7B,KAAKsE,MAAME,YACxBtE,QAASF,KAAKsE,MAAMpE,QACpB8B,OAAQhC,KAAKsE,MAAMC,cACnBxB,yBAA0B/C,KAAK0E,wEAK1BF,GACX,IAAMW,EAAOnF,KACPoF,EAAMlE,EAAcE,iBAAiBoD,EAAY9B,IACvD2C,QAAQC,IAAIF,GAEZG,MAAMH,GACHI,KAAK,SAASC,GACb,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,mBAAqBH,EAASI,UAE/CL,KAAK,SAASM,GACbT,QAAQC,IAAIQ,GACRA,EAAaC,WAAa,GAC5BC,WAAW,WAAQb,EAAKc,WAAWH,IAAiB5E,EAAcS,gBAGrEuE,MAAM,SAASC,GACdd,QAAQC,IAAI,0BAA2Ba,EAAMC,8CAIxCN,GACT,IAAMX,EAAOnF,KACPoF,EAAMlE,EAAcK,cAAcuE,EAAaO,UAAUC,QAC/DjB,QAAQC,IAAIF,GAEZG,MAAMH,GACHI,KAAK,SAASC,GACb,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,mBAAqBH,EAASI,UAE/CL,KAAK,SAASG,GACbN,QAAQC,IAAIK,GACZR,EAAKR,SAAS,CACZzE,QAASyF,EAAKY,YAGjBL,MAAM,SAASC,GACdd,QAAQC,IAAI,0BAA2Ba,EAAMC,kBA1F9BpF,aCWRwF,mLAZX,OACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,yEAAoDF,EAAAC,EAAAC,cAAA,KAAG+C,KAAK,2BAAR,qBAApD,2IACAjD,EAAAC,EAAAC,cAAA,uIAA+GF,EAAAC,EAAAC,cAAA,KAAG+C,KAAK,8BAAR,wBAA/G,yEACAjD,EAAAC,EAAAC,cAAA,wKACAF,EAAAC,EAAAC,cAAA,kCAAyBF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAG+C,KAAK,yCAAR,qBAA5B,6CARYpC,aCyBLyF,cAxBb,SAAAA,EAAYxG,GAAO,IAAAsD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxD,KAAAyG,IACjBlD,EAAAC,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAiD,GAAA7C,KAAA5D,KAAMC,KAEDgE,YAAcV,EAAKU,YAAYH,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAHFA,2EAMPS,GACVhE,KAAKC,MAAMyG,eAAe1C,EAAE2C,cAAcC,QAAQC,yCAIlD,OACE1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAewC,QAAS9C,KAAKiE,YAAa6C,cAAY,WAAW1D,KAAK,KAAnF,UACAjD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWwC,QAAS9C,KAAKiE,YAAa6C,cAAY,YAAY1D,KAAK,KAAhF,qBAjBSpC,aC0DN+F,qBApDb,SAAAA,EAAY9G,GAAO,IAAAsD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxD,KAAA+G,IACjBxD,EAAAC,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAuD,GAAAnD,KAAA5D,KAAMC,KACDqE,MAAQ,CACX0C,WAAY,GACZC,WAAY,YAGd1D,EAAK2D,cAAgB3D,EAAK2D,cAAcpD,KAAnBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAPJA,6EAUL4D,GACZnH,KAAK2E,SAAS,CACZsC,WAAYE,gDAKd,IAAMhC,EAAOnF,KAEbuF,MAAMrE,EAAcC,0BACjBqE,KAAK,SAASC,GACb,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,oBAEjBJ,KAAK,SAASG,GACbR,EAAKR,SAAS,CAACqC,WAAYrB,MAE5BO,MAAM,SAASC,GACdd,QAAQC,IAAI,0BAA2Ba,EAAMC,4CAKjD,IAAMY,EAAahH,KAAKsE,MAAM0C,WAAW7E,IAAI,SAACiF,GAAD,OAC3CjH,EAAAC,EAAAC,cAACgH,EAAD,CAAU5E,IAAK2E,EAAIzE,KAAMoC,SAAUqC,MAErC,OACEjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACiH,EAAD,CAAQZ,eAAgB1G,KAAKkH,gBAC7B/G,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,WAAWW,OAAkC,aAA1BhC,KAAKsE,MAAM2C,YACnCD,GAEH7G,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,YAAYW,OAAkC,cAA1BhC,KAAKsE,MAAM2C,YACrC9G,EAAAC,EAAAC,cAACkH,EAAD,eA9CQvG,cCKEwG,QACW,cAA7BC,OAAOjF,SAASkF,UAEe,UAA7BD,OAAOjF,SAASkF,UAEhBD,OAAOjF,SAASkF,SAASC,MACvB,2DCXNC,IAASC,OAAO1H,EAAAC,EAAAC,cAACyH,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3C,KAAK,SAAA4C,GACjCA,EAAaC","file":"static/js/main.f3f66f6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Goodreads extends Component {\r\n  render() {\r\n    if (this.props.reviews === null) {\r\n      return (\r\n        <div></div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"Goodreads\">\r\n        <p>Arvosana Goodreads-sivustolla:<br />\r\n        {this.formatRating(this.props.reviews.AverageRating)}/5</p>\r\n        <div className=\"ReviewsWrapper\" \r\n          dangerouslySetInnerHTML={{__html: this.props.reviews.ReviewsHtml}}>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  formatRating(rating) {\r\n    return rating.toLocaleString('fi-FI', {minimumFractionDigits: 2, maximumFractionDigits: 2})\r\n  }\r\n}\r\n\r\nexport default Goodreads;","const server = 'https://bochus.azurewebsites.net';\r\n\r\nexport default {\r\n  RECOMMENDATIONS_ENDPOINT: server + '/api/Recommendations',\r\n  searchReviewsUrl: (id) => `${server}/api/Items/SearchReviews?id=${id}`,\r\n  getReviewsUrl: (grBookID) => `${server}/api/Items/Reviews?gr_book_id=${grBookID}`,\r\n  THUMBNAILS_BASE_URL: server + '/Content/Thumbnails/',\r\n  FINNA_BASE_URL: 'https://heili.finna.fi',\r\n  DELAY_MILLIS: 1500\r\n};","import React, { Component } from 'react';\r\nimport Goodreads from './Goodreads';\r\nimport configuration from './configuration';\r\n\r\nclass Details extends Component {\r\n  setDefaults(item) {\r\n    if (item.Locations === null) {\r\n      item.Locations = [];\r\n    }\r\n    if (item.Subjects === null) {\r\n      item.Subjects = [];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const item = this.props.item;\r\n    if (item === null) {\r\n      return <div className=\"Details\" hidden></div>\r\n    }\r\n\r\n    this.setDefaults(item);\r\n\r\n    const subjects = item.Subjects.map((subject) =>\r\n      subject.FullText\r\n    ).join(' | ');\r\n    const locations = item.Locations.map((location) =>\r\n      <li key={location.ID}>{location.Name}</li>\r\n    );\r\n    const finnaLink = configuration.FINNA_BASE_URL + item.ExternalRelativeUrl;\r\n\r\n    return (\r\n      <div className=\"Details card\" hidden={this.props.hidden}>\r\n        <div className=\"card-body\">\r\n        <button className=\"DetailsCloseButton btn\"\r\n          onClick={this.props.handleCloseButtonClicked}>\r\n          ×\r\n        </button>\r\n        <h3>\r\n          <span className=\"AuthorName\">{item.AuthorName}</span><br />\r\n          {item.Title}\r\n        </h3>\r\n        <div>{item.PublicationYear}</div>\r\n        <div>{item.Series}</div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md\">\r\n            <p className=\"Subjects\">{subjects}</p>\r\n            <p>Heili-kirjastot, joiden kokoelmiin nimike kuuluu:</p>\r\n            <ul>{locations}</ul>\r\n            <p>Tarkista tämänhetkinen saatavuus <a href={finnaLink}>Finnasta</a>.</p>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <Goodreads reviews={this.props.reviews} />\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","import React, { Component } from 'react';\r\nimport configuration from './configuration';\r\n\r\nclass Thumbnail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.clicked = this.clicked.bind(this);\r\n  }\r\n\r\n  clicked(e) {\r\n    this.props.handleClick(this.props.item);\r\n  }\r\n\r\n  render() {\r\n    const item = this.props.item;\r\n    return (\r\n      <img key={item.ID}\r\n        src={configuration.THUMBNAILS_BASE_URL + item.ExternalID + '.png'}\r\n        className=\"Thumbnail img-fluid img-thumbnail\"\r\n        alt={item.Title} \r\n        onClick={this.clicked} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Thumbnail;","import React, { Component } from 'react';\r\nimport Details from './Details';\r\nimport Thumbnail from './Thumbnail';\r\nimport configuration from './configuration';\r\n\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      detailsHidden: true,\r\n      detailsItem: null,\r\n      reviews: null\r\n    };\r\n\r\n    this.handleThumbnailClick = this.handleThumbnailClick.bind(this);\r\n    this.handleDetailsCloseButtonClicked = this.handleDetailsCloseButtonClicked.bind(this);\r\n  }\r\n\r\n  handleThumbnailClick(item) {\r\n    this.setState({\r\n      detailsHidden: false,\r\n      detailsItem: item,\r\n      reviews: null\r\n    });\r\n\r\n    this.getReviewsID(item);\r\n  }\r\n\r\n  handleDetailsCloseButtonClicked(e) {\r\n    this.setState({\r\n      detailsHidden: true,\r\n      detailsItem: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const images = this.props.category.Items.map((item) => \r\n      <Thumbnail key={item.ID} item={item} handleClick={this.handleThumbnailClick} />\r\n    );\r\n    return (\r\n      <div className=\"Category\">\r\n        <h2>{this.props.category.Name}</h2>\r\n        <div className=\"Slider\">\r\n          {images}\r\n        </div>\r\n        <Details item={this.state.detailsItem} \r\n          reviews={this.state.reviews}\r\n          hidden={this.state.detailsHidden}\r\n          handleCloseButtonClicked={this.handleDetailsCloseButtonClicked} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getReviewsID(detailsItem) {\r\n    const self = this;\r\n    const url = configuration.searchReviewsUrl(detailsItem.ID);\r\n    console.log(url);\r\n\r\n    fetch(url)\r\n      .then(function(response) {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error('Request failed: ' + response.status);\r\n      })\r\n      .then(function(searchResult) {\r\n        console.log(searchResult);\r\n        if (searchResult.NumResults > 0) {\r\n          setTimeout(() => { self.getReviews(searchResult) }, configuration.DELAY_MILLIS);\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.log('Error retrieving data: ', error.message);\r\n      });\r\n  }\r\n\r\n  getReviews(searchResult) {\r\n    const self = this;\r\n    const url = configuration.getReviewsUrl(searchResult.BestMatch.BookID);\r\n    console.log(url);\r\n    \r\n    fetch(url)\r\n      .then(function(response) {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error('Request failed: ' + response.status);\r\n      })\r\n      .then(function(json) {\r\n        console.log(json);\r\n        self.setState({\r\n          reviews: json.Reviews\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log('Error retrieving data: ', error.message);\r\n      });\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Tietoja Bochus-palvelusta</h2>\r\n        <p>Bochus sisältää pienen valikoiman Etelä-Karjalan <a href=\"https://heili.finna.fi/\">Heili-kirjastojen</a> kokoelmista. Palvelun etusivu esittelee tästä aineistosta poimittuja teoksia avainsanojen tai lajityypin mukaan ryhmiteltynä.</p>\r\n        <p>Valitsemalla nimikkeen näet muun muassa kirjastot, joiden kokoelmiin teos kuuluu. Lisäksi saatetaan näyttää <a href=\"https://www.goodreads.com/\">Goodreads-sivustolta</a> peräisin olevaa lisätietoa kuten käyttäjien arvosteluja.</p>\r\n        <p>Bochus käyttää Finna.fi- ja Goodreads-sivustojen julkisia rajapintoja, mutta ei ole niiden tai Heili-kirjastojen hyväksymä tai suosittelema.</p>\r\n        <p>P.S. Muinaisenglannin <i><a href=\"https://en.wiktionary.org/wiki/bochus\">bōchūs</a></i> tarkoitti ”kirjastoa”.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.props.handleOpenPage(e.currentTarget.dataset.target);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\r\n        <a className=\"navbar-brand\" onClick={this.handleClick} data-target=\"MainPage\" href=\"#\">Bochus</a>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" onClick={this.handleClick} data-target=\"AboutPage\" href=\"#\">Tietoja</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport Category from './Category';\r\nimport About from './About';\r\nimport NavBar from './NavBar';\r\nimport configuration from './configuration';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      activePage: 'MainPage'\r\n    };\r\n\r\n    this.setActivePage = this.setActivePage.bind(this);\r\n  }\r\n\r\n  setActivePage(pageID) {\r\n    this.setState({\r\n      activePage: pageID\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const self = this;\r\n\r\n    fetch(configuration.RECOMMENDATIONS_ENDPOINT)\r\n      .then(function(response) {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error('Request failed');\r\n      })\r\n      .then(function(json) {\r\n        self.setState({categories: json});\r\n      })\r\n      .catch(function(error) {\r\n        console.log('Error retrieving data: ', error.message);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const categories = this.state.categories.map((cat) => \r\n      <Category key={cat.Name} category={cat} />\r\n    );\r\n    return (\r\n      <div className=\"App container\">\r\n        <NavBar handleOpenPage={this.setActivePage} />\r\n        <div id=\"MainPage\" hidden={this.state.activePage !== 'MainPage'}>\r\n          {categories}\r\n        </div>\r\n        <div id=\"AboutPage\" hidden={this.state.activePage !== 'AboutPage'}>\r\n          <About />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}